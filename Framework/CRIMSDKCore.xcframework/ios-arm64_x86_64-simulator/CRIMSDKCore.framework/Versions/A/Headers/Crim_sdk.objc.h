// Objective-C API for talking to crim_sdk/crim_sdk Go package.
//   gobind -lang=objc crim_sdk/crim_sdk
//
// File is generated by gobind. Do not edit.

#ifndef __Crim_sdk_H__
#define __Crim_sdk_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Crim_sdk_callback.objc.h"

@class Crim_sdkLoginMgr;

@interface Crim_sdkLoginMgr : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
// skipped method LoginMgr.BaseCtx with unsupported parameter or return types

// skipped method LoginMgr.Context with unsupported parameter or return types

// skipped method LoginMgr.Conversation with unsupported parameter or return types

- (void)exit;
// skipped method LoginMgr.File with unsupported parameter or return types

// skipped method LoginMgr.Friend with unsupported parameter or return types

// skipped method LoginMgr.Full with unsupported parameter or return types

// skipped method LoginMgr.GetLoginStatus with unsupported parameter or return types

- (NSString* _Nonnull)getLoginUserID;
- (NSString* _Nonnull)getToken;
// skipped method LoginMgr.Group with unsupported parameter or return types

// skipped method LoginMgr.ImConfig with unsupported parameter or return types

// skipped method LoginMgr.InitSDK with unsupported parameter or return types

// skipped method LoginMgr.Login with unsupported parameter or return types

// skipped method LoginMgr.Logout with unsupported parameter or return types

// skipped method LoginMgr.NetworkStatusChanged with unsupported parameter or return types

- (void)setAdvancedMsgListener:(id<Crim_sdk_callbackOnAdvancedMsgListener> _Nullable)advancedMsgListener;
// skipped method LoginMgr.SetAppBackgroundStatus with unsupported parameter or return types

- (void)setBatchMsgListener:(id<Crim_sdk_callbackOnBatchMsgListener> _Nullable)batchMsgListener;
- (void)setBusinessListener:(id<Crim_sdk_callbackOnCustomBusinessListener> _Nullable)listener;
- (void)setConnListener:(id<Crim_sdk_callbackOnConnListener> _Nullable)connListener;
- (void)setConversationListener:(id<Crim_sdk_callbackOnConversationListener> _Nullable)conversationListener;
- (void)setFriendListener:(id<Crim_sdk_callbackOnFriendshipListener> _Nullable)friendListener;
- (void)setGrpListener:(id<Crim_sdk_callbackOnGrpListener> _Nullable)groupListener;
- (void)setListenerForService:(id<Crim_sdk_callbackOnListenerForService> _Nullable)listener;
- (void)setMsgKvInfoListener:(id<Crim_sdk_callbackOnMsgKvInfoListener> _Nullable)messageKvInfoListener;
- (void)setSignalingListener:(id<Crim_sdk_callbackOnSignalingListener> _Nullable)userListener;
- (void)setSignalingListenerForService:(id<Crim_sdk_callbackOnSignalingListener> _Nullable)userListener;
- (void)setUserListener:(id<Crim_sdk_callbackOnUserListener> _Nullable)userListener;
// skipped method LoginMgr.Signaling with unsupported parameter or return types

// skipped method LoginMgr.Third with unsupported parameter or return types

- (void)unInitSDK;
- (void)updateLoginMgrInfoAddr:(NSString* _Nullable)wsAddr svrAddr:(NSString* _Nullable)svrAddr;
// skipped method LoginMgr.User with unsupported parameter or return types

@end

FOUNDATION_EXPORT const int64_t Crim_sdkLogged;
FOUNDATION_EXPORT const int64_t Crim_sdkLogging;
FOUNDATION_EXPORT const int64_t Crim_sdkLogoutStatus;

@interface Crim_sdk : NSObject
/**
 * Client-independent user class
 */
+ (Crim_sdkLoginMgr* _Nullable) userForSDK;
+ (void) setUserForSDK:(Crim_sdkLoginMgr* _Nullable)v;

@end

FOUNDATION_EXPORT void Crim_sdkAcceptFriendReq(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDHandleMsg);

FOUNDATION_EXPORT void Crim_sdkAcceptGrpReq(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, NSString* _Nullable fromUserID, NSString* _Nullable handleMsg);

FOUNDATION_EXPORT void Crim_sdkAddBlack(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable blackUserID);

FOUNDATION_EXPORT void Crim_sdkAddFriend(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDReqMsg);

FOUNDATION_EXPORT void Crim_sdkChangeGrpMemberMute(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, NSString* _Nullable userID, long mutedSeconds);

FOUNDATION_EXPORT void Crim_sdkChangeGrpMute(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, BOOL isMute);

FOUNDATION_EXPORT void Crim_sdkCheckFriend(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDList);

/**
 * CheckResourceLoad checks the SDK is resource load status.
 */
FOUNDATION_EXPORT BOOL Crim_sdkCheckResourceLoad(Crim_sdkLoginMgr* _Nullable uSDK, NSString* _Nullable funcName, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT void Crim_sdkClearConversationAndDeleteAllMsg(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateAdvancedQuoteMsg(NSString* _Nullable operationID, NSString* _Nullable text, NSString* _Nullable message, NSString* _Nullable messageEntityList);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateAdvancedTextMsg(NSString* _Nullable operationID, NSString* _Nullable text, NSString* _Nullable messageEntityList);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateCardMsg(NSString* _Nullable operationID, NSString* _Nullable cardInfo);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateCustomMsg(NSString* _Nullable operationID, NSString* _Nullable data, NSString* _Nullable extension, NSString* _Nullable description);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateFaceMsg(NSString* _Nullable operationID, long index, NSString* _Nullable data);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateFileMsgByURL(NSString* _Nullable operationID, NSString* _Nullable fileBaseInfo);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateFileMsgFromFullPath(NSString* _Nullable operationID, NSString* _Nullable fileFullPath, NSString* _Nullable fileName);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateForwardMsg(NSString* _Nullable operationID, NSString* _Nullable m);

FOUNDATION_EXPORT void Crim_sdkCreateGrp(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupReqInfo);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateImageMsgByURL(NSString* _Nullable operationID, NSString* _Nullable sourcePath, NSString* _Nullable sourcePicture, NSString* _Nullable bigPicture, NSString* _Nullable snapshotPicture);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateImageMsgFromFullPath(NSString* _Nullable operationID, NSString* _Nullable imageFullPath);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateLocationMsg(NSString* _Nullable operationID, NSString* _Nullable description, double longitude, double latitude);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateMergerMsg(NSString* _Nullable operationID, NSString* _Nullable messageList, NSString* _Nullable title, NSString* _Nullable summaryList);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateQuoteMsg(NSString* _Nullable operationID, NSString* _Nullable text, NSString* _Nullable message);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateSignalingAccept(NSString* _Nullable operationID, NSString* _Nullable data, NSString* _Nullable extension, NSString* _Nullable description);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateSignalingCancel(NSString* _Nullable operationID, NSString* _Nullable data, NSString* _Nullable extension, NSString* _Nullable description);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateSignalingHungUp(NSString* _Nullable operationID, NSString* _Nullable data, NSString* _Nullable extension, NSString* _Nullable description);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateSignalingInvite(NSString* _Nullable operationID, NSString* _Nullable data, NSString* _Nullable extension, NSString* _Nullable description);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateSignalingReject(NSString* _Nullable operationID, NSString* _Nullable data, NSString* _Nullable extension, NSString* _Nullable description);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateSoundMsgByURL(NSString* _Nullable operationID, NSString* _Nullable soundBaseInfo);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateSoundMsgFromFullPath(NSString* _Nullable operationID, NSString* _Nullable soundPath, int64_t duration);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateTextAtMsg(NSString* _Nullable operationID, NSString* _Nullable text, NSString* _Nullable atUserList, NSString* _Nullable atUsersInfo, NSString* _Nullable message);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateTextMsg(NSString* _Nullable operationID, NSString* _Nullable text);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateVideoMsgByURL(NSString* _Nullable operationID, NSString* _Nullable videoBaseInfo);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkCreateVideoMsgFromFullPath(NSString* _Nullable operationID, NSString* _Nullable videoFullPath, NSString* _Nullable videoType, int64_t duration, NSString* _Nullable snapshotFullPath);

FOUNDATION_EXPORT void Crim_sdkDeleteAllMsgFromLocal(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT void Crim_sdkDeleteAllMsgFromLocalAndSvr(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT void Crim_sdkDeleteConversationAndDeleteAllMsg(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID);

FOUNDATION_EXPORT void Crim_sdkDeleteFriend(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable friendUserID);

FOUNDATION_EXPORT void Crim_sdkDeleteMsg(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, NSString* _Nullable clientMsgID);

FOUNDATION_EXPORT void Crim_sdkDeleteMsgFromLocalStorage(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, NSString* _Nullable clientMsgID);

FOUNDATION_EXPORT void Crim_sdkDismissGrp(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID);

FOUNDATION_EXPORT void Crim_sdkFindMsgList(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable findMessageOptions);

FOUNDATION_EXPORT void Crim_sdkGetAdvancedHistoryMsgList(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable getMessageOptions);

FOUNDATION_EXPORT void Crim_sdkGetAdvancedHistoryMsgListReverse(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable getMessageOptions);

FOUNDATION_EXPORT void Crim_sdkGetAllConversationList(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkGetAtAllTag(NSString* _Nullable operationID);

FOUNDATION_EXPORT void Crim_sdkGetBlackList(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkGetConversationIDBySessionType(NSString* _Nullable operationID, NSString* _Nullable sourceID, long sessionType);

FOUNDATION_EXPORT void Crim_sdkGetConversationListSplit(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, long offset, long count);

/**
 * deprecated
 */
FOUNDATION_EXPORT void Crim_sdkGetConversationRecvMsgOpt(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationIDList);

FOUNDATION_EXPORT void Crim_sdkGetFriendList(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT void Crim_sdkGetFriendListPage(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, int32_t offset, int32_t count);

FOUNDATION_EXPORT void Crim_sdkGetFriendReqListAsApplicant(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT void Crim_sdkGetFriendReqListAsRecipient(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT void Crim_sdkGetGrpMemberList(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, int32_t filter, int32_t offset, int32_t count);

FOUNDATION_EXPORT void Crim_sdkGetGrpMemberListByJoinTimeFilter(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, int32_t offset, int32_t count, int64_t joinTimeBegin, int64_t joinTimeEnd, NSString* _Nullable filterUserIDList);

FOUNDATION_EXPORT void Crim_sdkGetGrpMemberOwnerAndAdmin(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID);

FOUNDATION_EXPORT void Crim_sdkGetGrpReqListAsApplicant(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT void Crim_sdkGetGrpReqListAsRecipient(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT void Crim_sdkGetJoinedGrpList(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT long Crim_sdkGetLoginStatus(NSString* _Nullable operationID);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkGetLoginUserID(void);

FOUNDATION_EXPORT void Crim_sdkGetMultipleConversation(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationIDList);

FOUNDATION_EXPORT void Crim_sdkGetOneConversation(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, int32_t sessionType, NSString* _Nullable sourceID);

FOUNDATION_EXPORT NSString* _Nonnull Crim_sdkGetSdkVersion(void);

/**
 * GetSelfUserInfo obtains the user's own information.
 */
FOUNDATION_EXPORT void Crim_sdkGetSelfUserInfo(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT void Crim_sdkGetSpecifiedFriendsInfo(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDList);

FOUNDATION_EXPORT void Crim_sdkGetSpecifiedGrpMembersInfo(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, NSString* _Nullable userIDList);

FOUNDATION_EXPORT void Crim_sdkGetSpecifiedGrpsInfo(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupIDList);

/**
 * GetSubscribeUsersStatus Get the online status of subscribers.
 */
FOUNDATION_EXPORT void Crim_sdkGetSubscribeUsersStatus(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT void Crim_sdkGetTotalUnreadMsgCount(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

/**
 * GetUserStatus Get the online status of users.
 */
FOUNDATION_EXPORT void Crim_sdkGetUserStatus(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDs);

FOUNDATION_EXPORT void Crim_sdkGetUsersInfo(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDs);

/**
 * GetUsersInfoFromSrv obtains the information about multiple users.
 */
FOUNDATION_EXPORT void Crim_sdkGetUsersInfoFromSrv(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDs);

FOUNDATION_EXPORT void Crim_sdkGetUsersInfoWithCache(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDs, NSString* _Nullable groupID);

FOUNDATION_EXPORT void Crim_sdkHideAllConversations(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT void Crim_sdkHideConversation(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID);

FOUNDATION_EXPORT BOOL Crim_sdkInitSDK(NSString* _Nullable operationID, NSString* _Nullable config);

FOUNDATION_EXPORT void Crim_sdkInsertGrpMsgToLocalStorage(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable message, NSString* _Nullable groupID, NSString* _Nullable sendID);

FOUNDATION_EXPORT void Crim_sdkInsertSingleMsgToLocalStorage(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable message, NSString* _Nullable recvID, NSString* _Nullable sendID);

FOUNDATION_EXPORT void Crim_sdkInviteUserToGrp(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, NSString* _Nullable reason, NSString* _Nullable userIDList);

FOUNDATION_EXPORT void Crim_sdkIsJoinGrp(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID);

FOUNDATION_EXPORT void Crim_sdkJoinGrp(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, NSString* _Nullable reqMsg, int32_t joinSource);

FOUNDATION_EXPORT void Crim_sdkKickGrpMember(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, NSString* _Nullable reason, NSString* _Nullable userIDList);

FOUNDATION_EXPORT void Crim_sdkLogin(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userID, NSString* _Nullable token, NSString* _Nullable appId, NSString* _Nullable appSecret);

FOUNDATION_EXPORT void Crim_sdkLogout(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

/**
 * mark as read
 */
FOUNDATION_EXPORT void Crim_sdkMarkConversationMsgAsRead(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID);

FOUNDATION_EXPORT void Crim_sdkMarkMsgsAsReadByMsgID(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, NSString* _Nullable clientMsgIDs);

FOUNDATION_EXPORT void Crim_sdkNetworkStatusChanged(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID);

FOUNDATION_EXPORT Crim_sdkLoginMgr* _Nullable Crim_sdkNewLoginMgr(void);

// skipped function ParseCRTokenAppID with unsupported parameter or return types


FOUNDATION_EXPORT void Crim_sdkPinConversation(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, BOOL isPinned);

FOUNDATION_EXPORT void Crim_sdkQuitGrp(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID);

FOUNDATION_EXPORT void Crim_sdkRefuseFriendReq(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDHandleMsg);

FOUNDATION_EXPORT void Crim_sdkRefuseGrpReq(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, NSString* _Nullable fromUserID, NSString* _Nullable handleMsg);

FOUNDATION_EXPORT void Crim_sdkRemoveBlack(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable removeUserID);

FOUNDATION_EXPORT void Crim_sdkResetConversationGrpAtType(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID);

FOUNDATION_EXPORT void Crim_sdkRevokeMsg(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, NSString* _Nullable clientMsgID);

FOUNDATION_EXPORT void Crim_sdkSearchFriends(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable searchParam);

FOUNDATION_EXPORT void Crim_sdkSearchGrpMembers(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable searchParam);

FOUNDATION_EXPORT void Crim_sdkSearchGrps(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable searchParam);

FOUNDATION_EXPORT void Crim_sdkSearchLocalMsgs(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable searchParam);

FOUNDATION_EXPORT void Crim_sdkSendMsg(id<Crim_sdk_callbackSendMsgCallBack> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable message, NSString* _Nullable recvID, NSString* _Nullable groupID, NSString* _Nullable offlinePushInfo);

FOUNDATION_EXPORT void Crim_sdkSetAdvancedMsgListener(id<Crim_sdk_callbackOnAdvancedMsgListener> _Nullable listener);

FOUNDATION_EXPORT void Crim_sdkSetAppBackgroundStatus(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, BOOL isBackground);

FOUNDATION_EXPORT void Crim_sdkSetAppBadge(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, int32_t appUnreadCount);

FOUNDATION_EXPORT void Crim_sdkSetBatchMsgListener(id<Crim_sdk_callbackOnBatchMsgListener> _Nullable listener);

FOUNDATION_EXPORT void Crim_sdkSetConnListener(id<Crim_sdk_callbackOnConnListener> _Nullable callback);

FOUNDATION_EXPORT void Crim_sdkSetConversationBurnDuration(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, int32_t duration);

FOUNDATION_EXPORT void Crim_sdkSetConversationDraft(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, NSString* _Nullable draftText);

FOUNDATION_EXPORT void Crim_sdkSetConversationIsMsgDestruct(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, BOOL isMsgDestruct);

FOUNDATION_EXPORT void Crim_sdkSetConversationListener(id<Crim_sdk_callbackOnConversationListener> _Nullable listener);

FOUNDATION_EXPORT void Crim_sdkSetConversationMsgDestructTime(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, int64_t msgDestructTime);

FOUNDATION_EXPORT void Crim_sdkSetConversationPrivateChat(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, BOOL isPrivate);

FOUNDATION_EXPORT void Crim_sdkSetConversationRecvMsgOpt(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, long opt);

FOUNDATION_EXPORT void Crim_sdkSetCustomBusinessListener(id<Crim_sdk_callbackOnCustomBusinessListener> _Nullable listener);

FOUNDATION_EXPORT void Crim_sdkSetFriendListener(id<Crim_sdk_callbackOnFriendshipListener> _Nullable listener);

FOUNDATION_EXPORT void Crim_sdkSetFriendRemark(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDRemark);

FOUNDATION_EXPORT void Crim_sdkSetGlobalRecvMsgOpt(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, long opt);

FOUNDATION_EXPORT void Crim_sdkSetGrpApplyMemberFriend(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, int32_t rule);

FOUNDATION_EXPORT void Crim_sdkSetGrpInfo(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupInfo);

FOUNDATION_EXPORT void Crim_sdkSetGrpListener(id<Crim_sdk_callbackOnGrpListener> _Nullable callback);

FOUNDATION_EXPORT void Crim_sdkSetGrpLookMemberInfo(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, int32_t rule);

FOUNDATION_EXPORT void Crim_sdkSetGrpMemberInfo(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupMemberInfo);

FOUNDATION_EXPORT void Crim_sdkSetGrpMemberNickname(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, NSString* _Nullable userID, NSString* _Nullable groupMemberNickname);

FOUNDATION_EXPORT void Crim_sdkSetGrpMemberRoleLevel(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, NSString* _Nullable userID, long roleLevel);

FOUNDATION_EXPORT void Crim_sdkSetGrpVerification(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, int32_t verification);

FOUNDATION_EXPORT void Crim_sdkSetHeartbeatInterval(long heartbeatInterval);

FOUNDATION_EXPORT void Crim_sdkSetMsgKvInfoListener(id<Crim_sdk_callbackOnMsgKvInfoListener> _Nullable listener);

FOUNDATION_EXPORT void Crim_sdkSetMsgLocalEx(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable conversationID, NSString* _Nullable clientMsgID, NSString* _Nullable localEx);

/**
 * SetSelfInfo sets the user's own information.
 */
FOUNDATION_EXPORT void Crim_sdkSetSelfInfo(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userInfo);

FOUNDATION_EXPORT void Crim_sdkSetSignalingListener(id<Crim_sdk_callbackOnSignalingListener> _Nullable callback);

FOUNDATION_EXPORT void Crim_sdkSetSignalingListenerForService(id<Crim_sdk_callbackOnSignalingListener> _Nullable callback);

FOUNDATION_EXPORT void Crim_sdkSetUserListener(id<Crim_sdk_callbackOnUserListener> _Nullable listener);

/**
 * SubscribeUsersStatus Presence status of subscribed users.
 */
FOUNDATION_EXPORT void Crim_sdkSubscribeUsersStatus(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDs);

FOUNDATION_EXPORT void Crim_sdkTransferGrpOwner(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable groupID, NSString* _Nullable newOwnerUserID);

FOUNDATION_EXPORT void Crim_sdkTypingStatusUpdate(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable recvID, NSString* _Nullable msgTip);

FOUNDATION_EXPORT void Crim_sdkUnInitSDK(NSString* _Nullable operationID);

/**
 * UnsubscribeUsersStatus Unsubscribe a user's presence.
 */
FOUNDATION_EXPORT void Crim_sdkUnsubscribeUsersStatus(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable userIDs);

FOUNDATION_EXPORT void Crim_sdkUpdateFcmToken(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable fcmToken, int64_t expireTime);

/**
 * UpdateMsgSenderInfo updates the message sender's nickname and face URL.
 */
FOUNDATION_EXPORT void Crim_sdkUpdateMsgSenderInfo(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable nickname, NSString* _Nullable faceURL);

FOUNDATION_EXPORT void Crim_sdkUploadFile(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable req, id<Crim_sdk_callbackUploadFileCallback> _Nullable progress);

FOUNDATION_EXPORT void Crim_sdkUploadLogs(id<Crim_sdk_callbackBase> _Nullable callback, NSString* _Nullable operationID, NSString* _Nullable uploadLogParams);

FOUNDATION_EXPORT void Crim_sdkWriteLog(NSString* _Nullable operationID, int32_t level, NSString* _Nullable content);

#endif
